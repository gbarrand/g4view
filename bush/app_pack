#!/bin/sh -f

# Copyright (C) 2010, Guy Barrand. All rights reserved.
# See the file bush.license for terms.

bush_home=`dirname $0`
#bush_home=`pwd`/../../bush  #this script needs and absolute path.

inlib_home="${bush_home}/../inexlib/inlib"
exlib_home="${bush_home}/../inexlib/exlib"
ourex_home="${bush_home}/../inexlib/ourex"

app="`${bush_home}/app_name`"
version="`${bush_home}/app_vers`"

save_dir=`pwd`

inlib_incs=./inlib_incs
c++ -o ${inlib_incs} ${inlib_home}/apps/incs.cpp
use_status=$?;if [ ${use_status} != 0 ] ; then exit ${use_status};fi

to=/tmp/${app}
/bin/rm -R -f /tmp/${app}
${bush_home}/find_rm /tmp "${app}_source-${version}*"

/bin/mkdir -p ${to}

#verbose=-verbose

#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
dirs="${inlib_home}:${exlib_home}"

if [ ${app} = g4exa ] ; then
  dirs="${dirs}:${ourex_home}/AIDA/v3r2p1"
fi

geant4_version=geant4.10.03.p01
if [ ${app} = g4exa -o ${app} = g4view ] ; then
  dirs="${dirs}:${ourex_home}/${geant4_version}/include/Geant4"
fi

nos='exlib/cbk/wall:wall_client'

configs="offscreen X11 Windows Android WebGL"
for config in ${configs} ; do
  /bin/rm -f ./tmp_0
  /bin/cp ${exlib_home}/exlib/app/${config}/app_main_cpp ./tmp_0
  sed -e "s:EXLIB_APP:${app}:g" ./tmp_0 > ./main.cpp
  /bin/rm -f ./tmp_0
  ${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to=${to}/${app}/mgr ./main.cpp
  /bin/cp ${exlib_home}/exlib/app/${config}/app_main_cpp ${to}/inexlib/exlib/exlib/app/${config}/.
  /bin/rm -f ./main.cpp
done

${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ../X11/main.cpp
${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ../Windows/main.cpp
${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ../offscreen/main.cpp
${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ../WebGL/main.cpp

${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ../Cocoa/main.mm
${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ../Cocoa/main.mm
${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ../Cocoa/GLView.mm
${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ../iOS/Classes/GLView.mm

${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ${bush_home}/cpp/platform.cpp
${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to="${to}/${app}/mgr" ${bush_home}/visual/windef.c

if [ ${app} = MEMPHYS_vis ] ; then
  ${inlib_incs} ${verbose} -pack -dirs=${dirs} -nos=${nos} -to=${to}/${app} ../../MEMPHYS/MEMPHYS/Analysis.hh
fi

/bin/rm -f ${inlib_incs}

#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
/bin/cp -R ${bush_home} ${to}/.
/bin/cp ${bush_home}/app_README ${to}/README

#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
/bin/mkdir -p ${to}/inexlib/ourex

items=
items="${items} freetype jpeg png expat gl2ps zip zlib csz"
#items="${items} glutess"
if [ ${app} = g4exa ] ; then items="${items} AIDA";fi
if [ ${app} = g4view ] ; then items="${items} pythia8";fi
if [ ${app} = TouchSky ] ; then items="${items} cfitsio hdf5 wcslib lua";fi
for item in ${items} ; do
  /bin/cp -R ${ourex_home}/${item} ${to}/inexlib/ourex/.
done

if [ ${app} = g4exa -o ${app} = g4view ] ; then
  /bin/mkdir -p ${to}/inexlib/ourex/${geant4_version}
  /bin/cp -R ${ourex_home}/${geant4_version}/include ${to}/inexlib/ourex/${geant4_version}/.
  /bin/cp -R ${ourex_home}/${geant4_version}/source ${to}/inexlib/ourex/${geant4_version}/.
  /bin/cp ${ourex_home}/${geant4_version}/build ${to}/inexlib/ourex/${geant4_version}/.
  /bin/cp ${ourex_home}/${geant4_version}/README ${to}/inexlib/ourex/${geant4_version}/.
  /bin/cp ${ourex_home}/${geant4_version}/a_native_copyright ${to}/inexlib/ourex/${geant4_version}/.
fi

#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
#///////////////////////////////////////////////////

/bin/cp -R ../mgr     ${to}/${app}/.
/bin/cp -R ../res     ${to}/${app}/.
/bin/cp -R ../comres  ${to}/${app}/.

/bin/cp -R ../Android ${to}/${app}/.

/bin/cp ${exlib_home}/exlib/app/Android/Main_java ${to}/inexlib/exlib/exlib/app/Android/.

if [ ${app} = g4view ] ; then
  /bin/mkdir -p ${to}/inexlib/exlib/exlib/cbk
  /bin/cp ${exlib_home}/exlib/cbk/wall ${to}/inexlib/exlib/exlib/cbk/.
  /bin/mkdir -p ${to}/inexlib/exlib/exlib/yacc
  /bin/cp -R ${exlib_home}/exlib/yacc   ${to}/inexlib/exlib/exlib/.
  /bin/cp ${inlib_home}/inlib/mathT  ${to}/inexlib/inlib/inlib/.
fi

if [ ${app} = g4exa ] ; then
  /bin/mkdir -p ${to}/inexlib/exlib/examples/geant4/A01
  /bin/cp -R ${exlib_home}/examples/geant4/A01/include ${to}/inexlib/exlib/examples/geant4/A01/.
  /bin/cp -R ${exlib_home}/examples/geant4/A01/src ${to}/inexlib/exlib/examples/geant4/A01/.
  /bin/cp ${exlib_home}/examples/geant4/A01/_A01EventAction.hh ${to}/inexlib/exlib/examples/geant4/A01/.
  /bin/cp ${exlib_home}/examples/geant4/A01/set_plots ${to}/inexlib/exlib/examples/geant4/A01/.
  /bin/cp ${exlib_home}/examples/geant4/A01/plots ${to}/inexlib/exlib/examples/geant4/A01/.
  /bin/cp ${inlib_home}/inlib/svalues  ${to}/inexlib/inlib/inlib/.
fi

if [ ${app} = MEMPHYS_vis ] ; then
  /bin/rm -R -f ${to}/inexlib/exlib/exlib/yacc
  /bin/mkdir -p ${to}/MEMPHYS
  /bin/cp -R ../../MEMPHYS/MEMPHYS ${to}/MEMPHYS/.
  /bin/cp -R ../../MEMPHYS/source  ${to}/MEMPHYS/.
  /bin/cp ../doc/README_for_pack ${to}/README
fi

if [ ${app} = TouchSky ] ; then
  /bin/mkdir -p ${to}/inexlib/exlib/exlib/slua
  /bin/cp ${exlib_home}/exlib/slua/inlib_swig_lua.cpp ${to}/inexlib/exlib/exlib/slua/.
  /bin/cp ${exlib_home}/exlib/slua/exlib_swig_lua.cpp ${to}/inexlib/exlib/exlib/slua/.
  /bin/cp ${exlib_home}/exlib/slua/inlib_swig_lua.icc ${to}/inexlib/exlib/exlib/slua/.
  /bin/cp ${exlib_home}/exlib/slua/exlib_swig_lua.icc ${to}/inexlib/exlib/exlib/slua/.

  /bin/mkdir -p ${to}/inexlib/exlib/exlib/swig
  /bin/cp ${exlib_home}/exlib/swig/inlib_i ${to}/inexlib/exlib/exlib/swig/.
  /bin/cp ${inlib_home}/inlib/printer ${to}/inexlib/inlib/inlib/.
  /bin/cp ${inlib_home}/inlib/get_cout ${to}/inexlib/inlib/inlib/.
  /bin/mkdir -p ${to}/inexlib/exlib/exlib/cbk
  /bin/cp ${exlib_home}/exlib/cbk/wall ${to}/inexlib/exlib/exlib/cbk/.
  /bin/cp -R ${inlib_home}/inlib/waxml ${to}/inexlib/inlib/inlib/.
  /bin/cp -R ${inlib_home}/inlib/rroot ${to}/inexlib/inlib/inlib/.
  /bin/cp -R ${inlib_home}/inlib/store ${to}/inexlib/inlib/inlib/.

  /bin/mkdir -p ${to}/inexlib/exlib/exlib/spy
  /bin/cp ${exlib_home}/exlib/spy/inlib.py ${to}/inexlib/exlib/exlib/spy/.
  /bin/cp ${exlib_home}/exlib/spy/exlib.py ${to}/inexlib/exlib/exlib/spy/.
fi

if [ ${app} = ArcheryTune ] ; then
  /bin/mkdir -p ${to}/inexlib/exlib/exlib/cbk
  /bin/cp ${exlib_home}/exlib/cbk/wall ${to}/inexlib/exlib/exlib/cbk/.
fi

if [ -f ../history ] ; then
  /bin/cp ../history ${to}/.
fi

/bin/mkdir -p ${to}/inexlib/exlib/inlib/wall
/bin/cp ${inlib_home}/inlib/wall/args ${to}/inexlib/inlib/inlib/wall/.

/bin/cp -R ../Cocoa   ${to}/${app}/.
/bin/cp -R ../iOS    ${to}/${app}/.

#/bin/cp -R ${inlib_home}/mgr ${to}/inexlib/inlib/.
#/bin/cp -R ${exlib_home}/mgr ${to}/inexlib/exlib/.

#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
${bush_home}/find_rm ${to} 'bin_*'
${bush_home}/find_rm ${to} 'CVS'
${bush_home}/find_rm ${to} '.git'
${bush_home}/find_rm ${to} '.DS_Store'
${bush_home}/find_rm ${to} 'DerivedData'
${bush_home}/find_rm ${to} 'out*_log'
${bush_home}/find_rm ${to} 'err*_log'
${bush_home}/find_rm ${to} 'out*.log'
${bush_home}/find_rm ${to} 'out*.fits'
${bush_home}/find_rm ${to} 'out*.ps'
${bush_home}/find_rm ${to} 'out*.root'
${bush_home}/find_rm ${to} '*.o'
${bush_home}/find_rm ${to} 'term_*.hist'
${bush_home}/find_rm ${to} 'secure.properties'

/bin/rm -R -f ${to}/Users

/bin/rm -R -f ${to}/${app}/Android/bin
/bin/rm -R -f ${to}/${app}/Android/gen
/bin/rm -R -f ${to}/${app}/Android/libs
/bin/rm -R -f ${to}/${app}/Android/obj

/bin/rm -R -f ${to}/${app}/Cocoa/build
/bin/rm -R -f ${to}/${app}/Cocoa/${app}.xcodeproj/project.xcworkspace
/bin/rm -R -f ${to}/${app}/Cocoa/${app}.xcodeproj/xcuserdata

/bin/rm -R -f ${to}/${app}/iOS/build
/bin/rm -R -f ${to}/${app}/iOS/${app}.xcodeproj/project.xcworkspace
/bin/rm -R -f ${to}/${app}/iOS/${app}.xcodeproj/xcuserdata

/bin/rm -f ${to}/${app}/mgr/inlib_platform

${bush_home}/find_rm ${to}/${app}/mgr '*.zip'

#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
if [ ${app} = ArcheryTune ] ; then
  ${bush_home}/replace WALL_DATA_CLIENT RM_WALL_DATA_CLIENT ${to}/bush/app_header
fi
#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
#///////////////////////////////////////////////////
cd ${to}/${app}/mgr
cd /tmp
zip -qr /tmp/${app}_source-${version}.zip ${app}
cd ${save_dir}

#///////////////////////////////////////////////////
#/// special packing : /////////////////////////////
#///////////////////////////////////////////////////
if [ ${app} = g4exa_why_that ] ; then
  /bin/rm -R -f /tmp/tmp_Cocoa_iOS
  /bin/mkdir /tmp/tmp_Cocoa_iOS
  /bin/cp -R /tmp/${app} /tmp/tmp_Cocoa_iOS/.

  /bin/rm -R /tmp/tmp_Cocoa_iOS/${app}/${app}/mgr
  /bin/rm -R /tmp/tmp_Cocoa_iOS/${app}/${app}/Android
  configs="offscreen X11 Windows Android WebGL tntnet wx"
  for config in ${configs} ; do
    /bin/rm -R -f /tmp/tmp_Cocoa_iOS/${app}/inexlib/exlib/exlib/app/${config}
    /bin/rm -R -f /tmp/tmp_Cocoa_iOS/${app}/inexlib/exlib/exlib/${config}
  done

  cat <<EOF_README > /tmp/tmp_Cocoa_iOS/${app}/README 
 To build for iOS with Xcode :
   Darwin> open ./<app>/iOS/<app>.xcodeproj

 To build for Cocoa with Xcode :
   Darwin> open ./<app>/Cocoa/<app>.xcodeproj
EOF_README

  cd /tmp/tmp_Cocoa_iOS
  zip -qr /tmp/${app}_source-${version}_Cocoa_iOS.zip ${app}
  cd ${save_dir}
fi

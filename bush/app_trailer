# Copyright (C) 2010, Guy Barrand. All rights reserved.
# See the file bush.license for terms.

# to be sourced in <app>/mgr/build scripts.

. ${bush_home}/app_GL_VBO

if [ ${build_app_dev} = "yes" ] ; then
  cppflags="${cppflags} -D${APP}_DEV"
fi

for build_item in ${build_app_use} ; do
  build_item="`echo ${build_item} | sed -e 's:\-app_use_::g'`"
  BUILD_ITEM="`echo ${build_item} | tr '[:lower:]' '[:upper:]'`"
  cppflags="${cppflags} -DAPP_USE_${BUILD_ITEM}"
done

if [ "${app_src}" = "" ] ; then

  if [ ${build_offscreen} = "yes" ] ; then
    if [ ! -d ../offscreen ] ; then /bin/mkdir -p ../offscreen ;fi
    /bin/cp ${exlib_home}/exlib/app/offscreen/app_main_cpp ../offscreen/main.cpp
    /bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ../offscreen/main.cpp > tmp_0;/bin/mv tmp_0 ../offscreen/main.cpp
    app_src=../offscreen/main.cpp

  elif [ ${build_webgl} = "yes" ] ; then
    if [ ! -d ../WebGL ] ; then /bin/mkdir -p ../WebGL ;fi
    /bin/cp ${exlib_home}/exlib/app/WebGL/app_main_cpp ../WebGL/main.cpp
    /bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ../WebGL/main.cpp > tmp_0;/bin/mv tmp_0 ../WebGL/main.cpp
    app_src=../WebGL/main.cpp

  elif [ ${build_tntnet} = "yes" ] ; then
    if [ ! -d ../tntnet ] ; then /bin/mkdir -p ../tntnet ;fi
    /bin/cp ${exlib_home}/exlib/app/tntnet/app_main_cpp ../tntnet/main.cpp
    /bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ../tntnet/main.cpp > tmp_0;/bin/mv tmp_0 ../tntnet/main.cpp
    app_src=../tntnet/main.cpp

  elif [ ${build_wx} = "yes" ] ; then
    if [ ! -d ../wx ] ; then /bin/mkdir -p ../wx ;fi
    /bin/cp ${exlib_home}/exlib/app/wx/app_main_cpp ../wx/main.cpp
    /bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ../wx/main.cpp > tmp_0;/bin/mv tmp_0 ../wx/main.cpp
    app_src=../wx/main.cpp

  elif [ ${build_visual} = "yes" ] ; then
    if [ ! -d ../Windows ] ; then /bin/mkdir -p ../Windows ;fi
    /bin/cp ${exlib_home}/exlib/app/Windows/app_main_cpp ../Windows/main.cpp
    /bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ../Windows/main.cpp > tmp_0;/bin/mv tmp_0 ../Windows/main.cpp
    app_src=../Windows/main.cpp

  elif [ ${build_cocoa} = "yes" -o ${build_cocoa_gnu} = "yes" ] ; then
    #/bin/cp ${exlib_home}/exlib/app/Cocoa/Cocoa_GLView_mm ../Cocoa/GLView.mm
    #/bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ../Cocoa/GLView.mm > tmp_0;/bin/mv tmp_0 ../Cocoa/GLView.mm
    #/bin/cp ${exlib_home}/exlib/app/Cocoa/Cocoa_main_mm ../Cocoa/main.mm
    #/bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ../Cocoa/main.mm > tmp_0;/bin/mv tmp_0 ../Cocoa/main.mm
    mmfiles="${mmfiles} ../Cocoa/GLView.mm"
    app_src=../Cocoa/main.mm

  elif [ ${build_ios} = "yes" -o ${build_ios_gnu} = "yes" -o ${build_iossim} = "yes" ] ; then
    mmfiles="${mmfiles} ../iOS/Classes/GLView.mm"
    app_src=../iOS/main.m

  elif [ ${build_x11} = "yes" ] ; then
    if [ ! -d ../X11 ] ; then /bin/mkdir -p ../X11 ;fi
    /bin/cp ${exlib_home}/exlib/app/X11/app_main_cpp ../X11/main.cpp
    /bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ../X11/main.cpp > tmp_0;/bin/mv tmp_0 ../X11/main.cpp
    app_src=../X11/main.cpp

  elif [ ${build_android} = "yes" ] ; then
    /bin/cp ${exlib_home}/exlib/app/Android/app_main_cpp ./main.cpp
    /bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ./main.cpp > tmp_0;/bin/mv tmp_0 ../Android/main.cpp
    /bin/cp ${exlib_home}/exlib/app/Android/Main_java ./Main.java
    /bin/rm -f tmp_0;sed -e "s:EXLIB_APP:${app}:g" ./Main.java > tmp_0;/bin/mv tmp_0 ../Android/src/fr/in2p3/lal/${app}/Main.java

    cppfiles="${cppfiles} ../Android/main.cpp"
    app_src=../Android/src/fr/in2p3/lal/${app}/Main.java 

    to_rm="${to_rm} ./main.cpp ./Main.java"

  else
    echo "bush/app_trailer : can't guess main app_src. Continue."
    #exit # not fatal
  fi
fi

. ${bush_home}/app_install
. ${bush_home}/application
. ${bush_home}/app_distrib

for file in "${to_rm}" ; do /bin/rm -f ${file}; done

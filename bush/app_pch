#!/bin/sh -f

# Copyright (C) 2010, Guy Barrand. All rights reserved.
# See the file bush.license for terms.

bush_home=`dirname $0`

#//////////////////////////////////////////////////////////
#/// args : ///////////////////////////////////////////////
#//////////////////////////////////////////////////////////
cpp_compiler=clang++

cling_clang=no

app_src=

while test $# -ge 1 ; do
  case $1 in
    -cling_clang) cling_clang=yes;;
    -x) set -x;;
     *) if [ $# = 1 ] ; then app_src=$1; else echo "unknown option : $1"; fi;;
  esac
  shift
done

if [ ${cling_clang} = yes ] ; then
  build_cling_clang=yes
  . ${bush_home}/use_cling
  if [ "${cling_home}" = "" ] ; then
    echo "bush/app_pch : cling_home not defined."
    exit
  fi
  cpp_compiler=${cling_home}/bin/clang++
fi

if [ "${app_src}" = "" ] ; then
  echo 'give an app main file.'
  exit
fi

suffix=`echo ${app_src} | sed 's:.*\.::'`
if [ "${suffix}" = "" ] ; then
  echo "no suffix found in ${app_src}."
  exit  
fi

dir=`dirname ${app_src}`
name=`basename ${app_src}`
name_no_suffix=`echo ${name} | sed -e "s:.${suffix}::g"`

#////////////////////////////////////////
#/// produce <app>_pch.h file : /////////
#////////////////////////////////////////
app_pch_h="${dir}/${name_no_suffix}_pch.h"

grep '#include' ${app_src} > ${app_pch_h}

app_pch="${dir}/${name_no_suffix}.pch"

cppflags="${cppflags} -I../.."

${cpp_compiler} -x c++-header ${cppflags} ${app_pch_h} -o ${app_pch}

#////////////////////////////////////////
#/// produce <app>_pch.cpp file : ///////
#////////////////////////////////////////
app_pch_cpp="${dir}/${name_no_suffix}_pch.cpp"

grep -v '#include' ${app_src} > ${app_pch_cpp}

#////////////////////////////////////////
#////////////////////////////////////////
#////////////////////////////////////////
bin_dir=bin_clang

app_file_exe="${bin_dir}/${name_no_suffix}_pch"

mkdir -p ${bin_dir}
${cpp_compiler} -include-pch ${app_pch} ${cppflags} ${name_no_suffix}_pch.cpp -o ${app_file_exe}


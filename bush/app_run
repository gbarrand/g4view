#!/bin/sh -f

# Copyright (C) 2010, Guy Barrand. All rights reserved.
# See the file bush.license for terms.

bush_home=`dirname $0`

run_gdb=no
#run_mpi=no
run_args=
build_args=
run_offscreen=no

while test $# -ge 1 ; do
  case $1 in
    # to find build_out dir :
    -gnu)         build_args="${build_args} $1";;
    -intel)       build_args="${build_args} $1";;
    -clang)       build_args="${build_args} $1";;
    -visual)      build_args="${build_args} $1";;

    -no_screen)   build_args="${build_args} $1";;
    -cocoa)       build_args="${build_args} $1";;
    -cocoa_gnu)   build_args="${build_args} $1";;
    -ios)         build_args="${build_args} $1";;
    -ios_gnu)     build_args="${build_args} $1";;
    -iossim)      build_args="${build_args} $1";;
    -x11)         build_args="${build_args} $1";;
    -wx)          build_args="${build_args} $1";;

    -c++11)       build_args="${build_args} $1";;
    
    -v)           build_args="${build_args} $1";;
    -x)           build_args="${build_args} $1";;

    # local options : 
    -offscreen) run_offscreen=yes;;
    -gdb) run_gdb=yes;;
    #-mpi) run_mpi=yes;;

    -bin_*)        build_args="${build_args} $1";;
    -distrib_*)    build_args="${build_args} $1";;

    -*) run_args="${run_args} $1";;  
     *) run_args="${run_args} $1";;  
  esac
  shift
done

if [ "${run_offscreen}" = "yes" ] ; then
  build_args="${build_args} -offscreen -bin_offscreen"
fi

. ${bush_home}/app_header # to get build_path

if [ ${build_verbose} = yes ] ; then echo "bush/app_run : run path is ${build_path}"; fi

if [ "${build_app_distrib_dir}" = "" ] ; then build_app_distrib_dir="${app}"; fi

#if [ "${run_mpi}" = "yes" ] ; then
#  if [ -f ./hosts.mpi ] ; then
#    mpirun --prefix /opt/local/libexec -np 2 --hostfile ./hosts.mpi ${build_path}/distrib/${build_app_distrib_dir}/${version}/bin/${app} ${run_args}
#  else
#    mpirun --prefix /opt/local/libexec -np 2 ${build_path}/distrib/${build_app_distrib_dir}/${version}/bin/${app} ${run_args}
#  fi

if [ "${run_gdb}" = "yes" ] ; then
  if [ `uname` = Darwin ] ; then
    /opt/local/bin/ggdb ${build_path}/distrib/${build_app_distrib_dir}/${version}/bin/${app}
  else
    gdb ${build_path}/distrib/${build_app_distrib_dir}/${version}/bin/${app}
  fi

elif [ ${build_cocoa} = "yes" -o ${build_cocoa_gnu} = "yes" ] ; then
  osx_vers="`sw_vers -productVersion`"
  is_10_5=no
  if [ "`echo ${osx_vers} | sed -e 's:10.5::g'`" != "${osx_vers}" ] ; then
    is_10_5=yes
  fi
  if [ "${is_10_5}" = "yes" ] ; then
    if [ "${run_args}" != "" ] ; then
      echo "bush/app_run : WARNING : on OSX ${osx_vers}, can't pass args to the open command."
    fi
    open ${build_path}/distrib/${build_app_distrib_dir}/${version}/${app}.app
  else
    open ${build_path}/distrib/${build_app_distrib_dir}/${version}/${app}.app --args ${run_args}
  fi

elif [ ${build_visual} = yes -a "${SSH_CLIENT}" != "" ] ; then
  path="${build_path}/distrib/${build_app_distrib_dir}/${version}/bin/${app}.exe"
 #path="/cygdrive/c/cygwin/usr/local/${app}/${version}/bin/${app}.exe"
  path=`cygpath -w -a ${path}`
  cmd="${HOME}/PsExec.exe -s -i '${path}' ${run_args}"
  eval ${cmd}

else
  ${build_path}/distrib/${build_app_distrib_dir}/${version}/bin/${app} ${run_args}
fi


# Copyright (C) 2010, Guy Barrand. All rights reserved.
# See the file bush.license for terms.

if [ "${auto_use_pack}" = "" ] ; then
  echo 'bush/auto_use : variable auto_use_pack not defined.'
  exit  
fi

#//////////////////////////////////////////////////////////////////////////
#/// look for an //${auto_use_pack}_build_use in ${auto_use_file} file ////
#//////////////////////////////////////////////////////////////////////////

app_uses="`grep ${auto_use_pack}_build_use ${auto_use_file}`"
if [ "${app_uses}" != "" ] ; then
  app_uses=`echo ${app_uses} | sed -e "s:${auto_use_pack}_build_use::g"`
  for item in ${app_uses} ; do
    #echo "set use_${item}"
    if [ ${item} = "//" -o ${item} = '/*' -o ${item} = '*/' -o ${item} = '#' ] ; then
      echo dummy > /dev/null
    else
      use_var="use_${item}"
      eval ${use_var}=yes
    fi
  done
fi

app_uses="`grep ${auto_use_pack}_Linux_build_use ${auto_use_file}`"  # used in exlib/examples/cpp/cube_SoQt.cpp
if [ "${app_uses}" != "" ] ; then
  if [ `uname` = "Linux" ] ; then
    app_uses=`echo ${app_uses} | sed -e "s:${auto_use_pack}_Linux_build_use::g"`
    for item in ${app_uses} ; do
      #echo "set use_${item}"
      if [ ${item} = "//" -o ${item} = '/*' -o ${item} = '*/' -o ${item} = '#' ] ; then
        echo dummy > /dev/null
      else
        use_var="use_${item}"
        eval ${use_var}=yes
      fi
    done
  fi
fi

app_cppfiles="`grep ${auto_use_pack}_build_cppfile ${auto_use_file}`"
if [ "${app_cppfiles}" != "" ] ; then
  app_cppfiles=`echo ${app_cppfiles} | sed -e "s:${auto_use_pack}_build_cppfile::g"`
  for item in ${app_cppfiles} ; do
    if [ ${item} != "//" ] ; then
      #echo "app : cppfile ${item}"
      cppfiles="${cppfiles} ${item}"
    fi
  done
fi

# default is use_archive=yes
app_use_shlib="`grep ${auto_use_pack}_use_shlib ${auto_use_file}`"
if [ "${app_use_shlib}" != "" ] ; then
  use_archive=no
fi

app_cppflags="`grep ${auto_use_pack}_build_cppflags ${auto_use_file}`"
if [ "${app_cppflags}" != "" ] ; then
  app_cppflags=`echo ${app_cppflags} | sed -e "s:${auto_use_pack}_build_cppflags::g"`
  for item in ${app_cppflags} ; do
    if [ ${item} != "//" ] ; then
      cppflags="${cppflags} ${item}"
    fi
  done
fi

#app_visual_cppflags="`grep ${auto_use_pack}_build_visual_cppflags ${auto_use_file}`"
#if [ "${app_visual_cppflags}" != "" ] ; then
#  app_visual_cppflags=`echo ${app_visual_cppflags} | sed -e "s:${auto_use_pack}_build_visual_cppflags::g"`
#  for item in ${app_visual_cppflags} ; do
#    if [ ${item} != "//" ] ; then
#      if [ ${build_visual} = "yes" ] ; then
#        cppflags="${cppflags} ${item}"
#      fi
#    fi
#  done
#fi

#app_compilers="`grep ${auto_use_pack}_build_compiler ${auto_use_file}`"
#if [ "${app_compilers}" != "" ] ; then
#  app_compilers=`echo ${app_compilers} | sed -e "s:${auto_use_pack}_build_compiler::g"`
#  for item in ${app_compilers} ; do
#    #echo "set compiler_${item}"
#    if [ ${item} = "//" -o ${item} = '/*' -o ${item} = '*/' -o ${item} = '#' ] ; then
#      echo dummy > /dev/null
#    else
#      compiler_var="compiler_${item}"
#      eval ${compiler_var}=yes
#    fi
#  done
#fi

if [ "${use_skip}" = "yes" ] ; then
  if [ ${build_verbose} = yes ] ; then
    echo "bush/auto_use : skip ${auto_use_file}."
  fi
  exit
fi


#if [ "${use_not_visual}" = "yes" ] ; then
#  if [ ${build_visual} = yes ] ; then
#    if [ ${build_verbose} = yes ] ; then
#      echo "bush/auto_use : ${auto_use_file} not done with visual."
#    fi
#  fi
#  exit
#fi

if [ ${build_visual} = "yes" ] ; then
  if [ "${use_X11}" = "yes" ] ; then
    if [ ${build_verbose} = yes ] ; then
      echo "bush/auto_use : use_X11 and build_visual are not compatible. Skip ${auto_use_file}."
    fi
    exit
  fi
  if [ "${use_Xm}" = "yes" ] ; then
    if [ ${build_verbose} = yes ] ; then
      echo "bush/auto_use : use_Xm and build_visual are not compatible. Skip ${auto_use_file}."
    fi
    exit
  fi
  if [ "${use_gtk}" = "yes" ] ; then
    if [ ${build_verbose} = yes ] ; then
      echo "bush/auto_use : use_gtk and build_visual are not compatible. Skip ${auto_use_file}."
    fi
    exit
  fi
  if [ "${use_Qt}" = "yes" ] ; then
    if [ ${build_verbose} = yes ] ; then
      echo "bush/auto_use : use_Qt and build_visual are not compatible. Skip ${auto_use_file}."
    fi
    exit
  fi
else
  if [ "${use_Windows}" = "yes" ] ; then
    if [ ${build_verbose} = yes ] ; then
      echo "bush/auto_use : use_Windows and build_visual=no are not compatible. Skip ${auto_use_file}."
    fi
    exit
  fi
fi


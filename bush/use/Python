# Copyright (C) 2010, Guy Barrand. All rights reserved.
# See the file bush.license for terms.

if [ "${build_use_not_our_Python}" = "" ] ; then
  #build_use_not_our_Python=yes #use system python
  build_use_not_our_Python=no #use ourex/Python
fi

if [ "${use_Python}" = "yes" ] ; then
if [ "${build_use_not_our_Python}" = "yes" ] ; then
  use_sys_Python=yes
  use_our_Python=no
else
  use_sys_Python=no
  use_our_Python=yes
fi
fi

if [ "${use_sys_Python}" = "yes" ] ; then

  #/////////////////////////////////////////////////////////////
  #/// use an lcg installation ? (lxplus or local) /////////////
  #/// If so, it coworks with the env variable BUILD_CONFIG ////
  #/////////////////////////////////////////////////////////////
  lcg_area=
  if [ "`uname -n | grep lxplus`" != "" ] ; then
    lcg_area=/afs/cern.ch/sw/lcg/external
  fi
  if [ "${MYSITEROOT}" != "" ] ; then
    lcg_area="${MYSITEROOT}/lcg/external"
  fi
  #/////////////////////////////////////////////////////////////
  #/////////////////////////////////////////////////////////////
  #/////////////////////////////////////////////////////////////
  is_lx2=no
  #if [ "`uname -n | grep lx2`" != "" ] ; then is_lx2=yes;fi
  #/////////////////////////////////////////////////////////////
  #/////////////////////////////////////////////////////////////
  #/////////////////////////////////////////////////////////////

  Python_ld_library_path=
  py_exe=

  if [ ${build_visual} = "yes" ] ; then

    if [ -d "c:/usr/local/Python27" ] ; then
      Python_home=c:/usr/local/Python27
      cppflags="${cppflags} -I${Python_home}/include"
      libs="${libs} ${Python_home}/libs/python27.lib"
      py_exe="${Python_home}/python.exe"

    elif [ -d "c:/Python27" ] ; then
      Python_home=c:/Python27
      cppflags="${cppflags} -I${Python_home}/include"
      libs="${libs} ${Python_home}/libs/python27.lib"
      py_exe="${Python_home}/python.exe"

    elif [ -d "/usr/include/python2.7_cygwin_does_not_work" ] ; then
      # from cygwin installer, but it does not compile with VisualC++.
      ccflags="${ccflags}   -I/usr/include/python2.7"
      cppflags="${cppflags} -I/usr/include/python2.7"
      libs="${libs} /usr/lib/libpython2.7.dll.a"
      py_exe="/usr/bin/python"

    else      
      echo "bush/use/Python : WARNING : Python not found."
      exit
    fi


  elif [ `uname` = Darwin ] ; then

    #NOTE : since 10.9 (Mavericks) Python is no more in the SDK.
    #if [ ${build_sdk_mac} = "yes" ] ; then
    #  Python_home=${macosx_sdk}/System/Library/Frameworks/Python.framework/Versions/Current
    #elif [ ${build_sdk_mac_gnu} = "yes" ] ; then
    #  Python_home=${macosx_sdk}/System/Library/Frameworks/Python.framework/Versions/Current
    #elif [ ${build_clang} = "yes" ] ; then
    #  Python_home=/System/Library/Frameworks/Python.framework/Versions/Current
    #else
    #  Python_home=/System/Library/Frameworks/Python.framework/Versions/Current
    #fi

    # if working with boost/python from MacPorts, you have to use :
    Python_home=/opt/local/Library/Frameworks/Python.framework/Versions/2.7

    #Python_home=/usr/local/Python/2.7.8
  
    if [ ! -d "${Python_home}" ] ; then
      echo "bush/use/Python : WARNING : not found under ${Python_home}"
      exit
    fi

    ccflags="${ccflags}   -I${Python_home}/Headers"
    cppflags="${cppflags} -I${Python_home}/Headers"
    libs="${libs} ${Python_home}/Python"

   #ccflags="${ccflags}   -I${Python_home}/include/python2.7"
   #cppflags="${cppflags} -I${Python_home}/include/python2.7"
   #libs="${libs} -L${Python_home}/lib -lpython2.7"

    py_exe="${Python_home}/bin/pythonw"

  elif [ "${lcg_area}" != "" ] ; then

    if   [ "${BUILD_CONFIG}" = "x86_64-slc5-gcc43-opt" ] ; then
      Python_vers=2.7
      Python_home="${lcg_area}/Python/2.7.3/x86_64-slc5-gcc43-opt"
    elif [ "${BUILD_CONFIG}" = "x86_64-slc5-gcc46-opt" ] ; then
      Python_vers=2.7
      Python_home="${lcg_area}/Python/2.7.3/x86_64-slc5-gcc46-opt"
    elif [ "${BUILD_CONFIG}" = "x86_64-slc6-gcc46-opt" ] ; then
      Python_vers=2.7
      Python_home="${lcg_area}/Python/2.7.3/x86_64-slc6-gcc46-opt"
    elif [ "${BUILD_CONFIG}" = "x86_64-slc6-gcc48-opt" ] ; then
      Python_vers=2.7
      Python_home="${lcg_area}/Python/2.7.4/x86_64-slc6-gcc48-opt"
    else
      echo 'bush/use/Python : use an lcg installation :'
      echo '  you have to define the BUILD_CONFIG variable, for example :'
      echo '    x86_64-slc5-gcc46-opt'
      echo '  and ensure to be in the corresponding environment. In particular'
      echo '  to be sure to have setup the corresponding compiler. Here :'
      echo '    sh> g++ --version'
      echo '  should return a 4.6.x version number.'
      exit
    fi

    # NOTE : at run time python-config needs a correct LD_LIBRARY_PATH
    #        to attach libpython<version>.so. It complicates. 
    #        Moreover the --cflags option returns options that
    #        induces pedantic warnings. Then we prefer to set
    #        ccflags, cppflags, libs ourself.
    #py_conf="${Python_home}/bin/python-config"
    #ccflags="${ccflags}   `${py_conf} --cflags`"
    #cppflags="${cppflags} `${py_conf} --cflags`"
    #libs="${libs}         `${py_conf} --libs`"

    ccflags="${ccflags}   -I${Python_home}/include/python${Python_vers}"
    cppflags="${cppflags} -I${Python_home}/include/python${Python_vers}"
    libs="${libs} -L${Python_home}/lib -lpython${Python_vers}"
    libs="${libs} -L/usr/${lib} -lpthread -lutil"

    Python_ld_library_path="${Python_home}/lib"
    py_exe="${Python_home}/bin/python"

  else

    Python_lib="${Python_home}/${lib}"

    if [ "${is_lx2}" = "yes" ] ; then
      Python_vers=2.7
      Python_home=/usr/local/python-2.7.1
      Python_lib="${Python_home}/lib"

    elif [ -f /usr/include/python2.7/Python.h ] ; then
      Python_vers=2.7
      Python_home=/usr
    elif [ -f /usr/include/python2.6/Python.h ] ; then
      Python_vers=2.6
      Python_home=/usr
    elif [ -f /usr/include/python2.5/Python.h ] ; then
      Python_vers=2.5
      Python_home=/usr
    elif [ -f /usr/include/python2.4/Python.h ] ; then
      Python_vers=2.4
      Python_home=/usr
    else
      echo "bush/use/Python : Python 2.[7,6,5,4] not found."
      exit
    fi

    ccflags="${ccflags}   -I${Python_home}/include/python${Python_vers}"
    cppflags="${cppflags} -I${Python_home}/include/python${Python_vers}"

    libs="${libs} -L${Python_lib} -lpython${Python_vers}"

    py_exe="${Python_home}/bin/python"

  fi

  cppflags="${cppflags} -DEXLIB_USE_NATIVE_PYTHON"

  if [ "${build_verbose}" = "yes" ] ; then
    echo "bush/use/Python : python exe is ${py_exe}"
  fi

fi

if [ "${use_our_Python}" = "yes" ] ; then
  if [ "${ourex_home}" = "" ] ; then
    echo 'bush/use/Python : variable ourex_home not defined.';exit
  fi
  Python_home=${ourex_home}/Python

  Python_incs="-I${Python_home}/include/python2.7"

  cppflags="${cppflags} ${Python_incs}"

  #//////////////////////////////////////////
  #//////////////////////////////////////////
  #//////////////////////////////////////////

  Python_build_dir="${Python_home}/${build_dir}"

  if [ ! -d ${Python_build_dir} ] ; then
    Python_old_dir=`pwd`
    cd ${Python_home}
    ./build ${ourex_args}
    cd ${Python_old_dir}
  fi

  if [ ! -d ${Python_build_dir} ] ; then
    echo "bush/use/Python : directory ${Python_build_dir} not found."
    exit
  fi

  if [ "${use_archive}" = "yes" ] ; then
    libs="${libs} ${Python_build_dir}/libourex_Python.a"
  else
    if [ ${build_visual} = "yes" ] ; then
      libs="${libs} ${Python_build_dir}/ourex_Python.lib"
    else
      libs="${libs} -L${Python_build_dir} -lourex_Python"
    fi
  fi

  if [ ${build_visual} = "yes" ] ; then
    libs="${libs} shell32.lib"
  fi

  py_exe="${Python_build_dir}/python"

  if [ "${build_verbose}" = "yes" ] ; then
    echo "bush/use/Python : python exe is ${py_exe}"
  fi
fi



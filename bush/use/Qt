# Copyright (C) 2010, Guy Barrand. All rights reserved.
# See the file bush.license for terms.

if [ "${use_Qt}" = "yes" ] ; then
  if [ ${build_visual} = "yes" ] ; then
    echo "bush/use/Qt : cl.exe : use_Qt not yet supported."
    exit
  fi

  #/////////////////////////////////////////////////////////////
  #/// use an lcg installation ? (lxplus or local) /////////////
  #/// If so, it coworks with the env variable BUILD_CONFIG ////
  #/////////////////////////////////////////////////////////////
  lcg_area=
  if [ "`uname -n | grep lxplus`" != "" ] ; then
    lcg_area=/afs/cern.ch/sw/lcg/external
  fi
  if [ "${MYSITEROOT}" != "" ] ; then
    lcg_area="${MYSITEROOT}/lcg/external"
  fi
  #/////////////////////////////////////////////////////////////
  #/////////////////////////////////////////////////////////////
  #/////////////////////////////////////////////////////////////

  Qt_ld_library_path=
  moc_exe=
   
  if [ `uname` = Darwin ] ; then

    if [ -d /Library/Frameworks/QtCore.framework ] ; then

      cppflags="${cppflags} -F/Library/Frameworks"

      libs="${libs} -F/Library/Frameworks -framework QtOpenGL"
      libs="${libs} -framework QtGui -framework QtCore"

      moc_exe=/usr/bin/moc
   
    elif [ -d /usr/local/Qt/5.0.1 ] ; then

      Qt_home=/usr/local/Qt/5.0.1/5.0.1/clang_64

      cppflags="${cppflags} -F${Qt_home}/lib"

      libs="${libs} -F${Qt_home}/lib -framework QtWidgets"
      libs="${libs} -framework QtWidgets -framework QtOpenGL"
      libs="${libs} -framework QtGui -framework QtCore"

      moc_exe="${Qt_home}/bin/moc"

      #Qt_ld_library_path="${Qt_home}/lib"

    elif [ -d /opt/local/libexec/qt4/include/Qt ] ; then

      Qt_home=/opt/local/libexec/qt4

      cppflags="${cppflags} -I${Qt_home}/include"

      libs="${libs} -L${Qt_home}/lib -lQtOpenGL -lQtGUI -lQtCore"

      moc_exe="${Qt_home}/bin/moc"

      #Qt_ld_library_path="${Qt_home}/lib"

    fi

  elif [ "${lcg_area}" != "" ] ; then

    if   [ "${BUILD_CONFIG}" = "x86_64-slc5-gcc43-opt" ] ; then
      Qt_home="${lcg_area}/qt/4.7.4/x86_64-slc5-gcc43-opt"
    elif [ "${BUILD_CONFIG}" = "x86_64-slc5-gcc46-opt" ] ; then
      Qt_home="${lcg_area}/qt/4.6.3p2/x86_64-slc5-gcc46-opt"
    elif [ "${BUILD_CONFIG}" = "x86_64-slc6-gcc46-opt" ] ; then
      Qt_home="${lcg_area}/qt/4.8.3/x86_64-slc6-gcc46-opt"
    elif [ "${BUILD_CONFIG}" = "x86_64-slc6-gcc48-opt" ] ; then
      Qt_home="${lcg_area}/qt/4.8.4/x86_64-slc6-gcc48-opt"
    else
      echo 'bush/use/Qt : use an lcg installation :'
      echo '  you have to define the BUILD_CONFIG variable, for example :'
      echo '    x86_64-slc5-gcc46-opt'
      echo '  and ensure to be in the corresponding environment. In particular'
      echo '  to be sure to have setup the corresponding compiler. Here :'
      echo '    sh> g++ --version'
      echo '  should return a 4.6.x version number.'
      exit
    fi

    cppflags="${cppflags} -I${Qt_home}/include"

    libs="${libs} -L${Qt_home}/lib -lQtOpenGL -lQtGui -lQtCore"

    moc_exe="${Qt_home}/bin/moc"

    Qt_ld_library_path="${Qt_home}/lib"

  elif [ -d /usr/include/qt4 ] ; then
    Qt_home=/usr

    cppflags="${cppflags} -I${Qt_home}/include/qt4"

    libs="${libs} -L${Qt_home}/lib -lQtOpenGL -lQtGui -lQtCore"

    Qt_ld_library_path="${Qt_home}/lib"

    moc_exe="${Qt_home}/bin/moc-qt4"

  elif [ -d /usr/include/Qt ] ; then
    Qt_home=/usr

    cppflags="${cppflags} -I${Qt_home}/include/Qt"

    libs="${libs} -L${Qt_home}/lib -lQtOpenGL -lQtGui -lQtCore"

    Qt_ld_library_path="${Qt_home}/lib"

    moc_exe="${Qt_home}/bin/moc-qt4"

  fi

  if [ "${moc_exe}" = "" ] ; then
    echo "bush/use/Qt : Qt not found."
    exit
  fi

fi


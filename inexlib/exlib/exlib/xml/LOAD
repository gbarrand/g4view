// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file exlib.license for terms.

#ifndef exlib_xml_LOAD
#define exlib_xml_LOAD

#define EXLIB_XML_LOAD(a__ext) \
    /*look for a <app>.<ext> in the res dir :*/\
   {std::string path = a_res_dir;\
    path += inlib::sep();\
    path += m_app_name;\
    path += "."+std::string(#a__ext);\
    if(inlib::file::exists(path)) {\
      exlib::xml::load_##a__ext##_file(m_out,path,m_##a__ext##s);\
    } else { /*Android res file names are lowercase.*/\
      std::string _path = a_res_dir;\
      _path += inlib::sep();\
      std::string _app_name = m_app_name;\
      inlib::tolowercase(_app_name);\
      _path += _app_name;\
      _path += "."+std::string(#a__ext);\
      if(inlib::file::exists(_path)) {\
        exlib::xml::load_##a__ext##_file(m_out,_path,m_##a__ext##s);\
      }\
    }}\
    \
    /*look for a <app>.<ext> in the data dir :*/\
    /* any found item with same name will override existing one.*/\
   {std::string path = a_data_dir;\
    path += inlib::sep();\
    path += m_app_name;\
    path += "."+std::string(#a__ext);\
    if(inlib::file::exists(path)) exlib::xml::load_##a__ext##_file(m_out,path,m_##a__ext##s);}\
    \
    /*look for a <ext>s file in the data dir :*/\
   {std::string path = a_data_dir;\
    path += inlib::sep();\
    path += std::string(#a__ext)+"s";\
    if(inlib::file::exists(path)) exlib::xml::load_##a__ext##_file(m_out,path,m_##a__ext##s);}

#endif

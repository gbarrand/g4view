// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file exlib.license for terms.

#ifndef exlib_geant4_add_shape
#define exlib_geant4_add_shape

#include <G4VSolid.hh>

#include "polyhedron"

#include <inlib/sg/separator>
#include <inlib/sg/polyhedron>

namespace exlib {
namespace geant4 {

inline bool add_shape(std::ostream& a_out,inlib::sg::separator& a_sep,G4VSolid& a_vsolid,const inlib::mat4d& a_mtx,bool a_solid) {

  G4Polyhedron* g4Polyhedron = a_vsolid.CreatePolyhedron();
  if(!g4Polyhedron) {
    a_out << "exlib::geant4::add_shape : can't create polyhedron for G4VSolid " << a_vsolid.GetName() << std::endl;
    return false;        
  }     

  inlib::sg::polyhedron* _node = new inlib::sg::polyhedron();
  _node->solid = a_solid;
  //_node->reduced_wire_frame = false;

  inlib::hep::polyhedron& ph = _node->ph.value();

  polyhedron g4p(*g4Polyhedron); //costly
  ph = g4p;

  delete g4Polyhedron;

  inlib::hep::tsf_polyhedron(ph,a_mtx);
  a_sep.add(_node);

  return true;
}

}}

//exlib_build_use inlib geant4 inlib_glutess

#endif

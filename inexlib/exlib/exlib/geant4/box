// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file exlib.license for terms.

#ifndef exlib_geant4_box
#define exlib_geant4_box

// to test memory cleanup.

#include <G4Box.hh>

#ifdef INLIB_MEM
#include <inlib/mem>
#endif

namespace exlib {
namespace geant4 {

class box : public G4Box {
#ifdef INLIB_MEM
  static const std::string& s_class() {
    static const std::string s_v("exlib::geant4::box");
    return s_v;
  }
#endif
public:
  box(const std::string& a_name,double a_x,double a_y,double a_z)
  :G4Box(a_name,a_x,a_y,a_z){
#ifdef INLIB_MEM
    inlib::mem::increment(s_class().c_str());
#endif
  }
  virtual ~box(){
#ifdef INLIB_MEM
    inlib::mem::decrement(s_class().c_str());
#endif
  }
protected:
  box(const box& a_from):G4Box(a_from){
#ifdef INLIB_MEM
    inlib::mem::increment(s_class().c_str());
#endif
  }
  box& operator=(const box& a_from){
    G4Box::operator=(a_from);
    return *this;
  }
};

}}

//exlib_build_use geant4
#ifdef INLIB_MEM
//exlib_build_use inlib
#endif

#endif


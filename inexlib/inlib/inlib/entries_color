// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_entries_color
#define inlib_entries_color

// to get color from exlib::sg::entries. Use in gui_params.

#include "words"
#include "sto"

namespace inlib {

template <class T>
inline bool entries_color(const std::string& a_s,T& a_r,T& a_g,T& a_b,T& a_a) {
  //s of the form : <real:r> <real:g> <real:b>
  //s of the form : <real:r> <real:g> <real:b> <string:name>
  //s of the form : <real:r> <real:g> <real:b> <real:a> <string:name>
  std::vector<std::string> ws;
  words(a_s," ",false,ws);
  if(ws.size()==3){
    if(!to<T>(ws[0],a_r)) return false;
    if(!to<T>(ws[1],a_g)) return false;
    if(!to<T>(ws[2],a_b)) return false;
    a_a = 1;
    return true;
  } else if(ws.size()==4){
    if(!to<T>(ws[0],a_r)) return false;
    if(!to<T>(ws[1],a_g)) return false;
    if(!to<T>(ws[2],a_b)) return false;
    if(!to<T>(ws[3],a_a)) a_a = 1;
    return true;
  } else if(ws.size()==5){
    if(!to<T>(ws[0],a_r)) return false;
    if(!to<T>(ws[1],a_g)) return false;
    if(!to<T>(ws[2],a_b)) return false;
    if(!to<T>(ws[3],a_a)) return false;
    return true;
  } else {
    a_r = 0.5f;
    a_g = 0.5f;
    a_b = 0.5f;
    a_a = 1;
    return false;
  }
}

}

#endif

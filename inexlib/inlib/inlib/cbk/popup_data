// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_cbk_popup_data
#define inlib_cbk_popup_data

#include "../sg/node"
#include "../sg/rgba"

namespace inlib {
namespace cbk {

class popup_data {
public:
  popup_data(sg::node& a_node,int a_ex,int a_ey)
  :m_node(a_node),m_ex(a_ex),m_ey(a_ey)
  ,m_rgba(0)
  ,m_z(0),m_w(0)
  ,m_what(0)
  {}
  virtual ~popup_data(){}
public:
  popup_data(const popup_data& a_from)
  :m_node(a_from.m_node)
  ,m_ex(a_from.m_ex),m_ey(a_from.m_ey)
  ,m_field_desc(a_from.m_field_desc)
  ,m_rgba(a_from.m_rgba)
  ,m_state(a_from.m_state)
  ,m_z(a_from.m_z)
  ,m_w(a_from.m_w)
  ,m_what(a_from.m_what)
  ,m_swhat(a_from.m_swhat)
  {}
  popup_data& operator=(const popup_data& a_from){
    if(&a_from==this) return *this;
    m_ex = a_from.m_ex;
    m_ey = a_from.m_ey;
    m_field_desc = a_from.m_field_desc;
    m_rgba = a_from.m_rgba;
    m_state = a_from.m_state;
    m_z = a_from.m_z;
    m_w = a_from.m_w;
    m_what = a_from.m_what;
    m_swhat = a_from.m_swhat;
    return *this;
  }
public:
  sg::node& m_node;   //not owner.
  int m_ex;
  int m_ey;
  sg::field_desc m_field_desc;
  // color :
  sg::rgba* m_rgba;
  // center :
  sg::state m_state;
  float m_z;
  float m_w;
  // anim, sf_enum :
  unsigned int m_what;
  // cmap :
  std::string m_swhat;
};

}}

#endif

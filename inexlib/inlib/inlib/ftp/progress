// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_ftp_progress
#define inlib_ftp_progress

#include "../net/ftp"
#include "../sg/ui"
#include "../sg/progress"

namespace inlib {
namespace ftp {

class progress : public net::ftp {
  typedef net::ftp parent;
public:
  virtual bool fetch_cbk(uint64 a_length) {
    if(!m_size) return false;
    double fac = double(a_length)/double(m_size);
    m_progress.value = float(fac);
    m_ui.win_render();
    return m_ui.stop_works()?false:true;
  }
public:
  progress(std::ostream& a_out,bool a_verbose,sg::ui& a_ui,sg::progress& a_progress,uint64 a_size)
  :parent(a_out,a_verbose)
  ,m_ui(a_ui)
  ,m_progress(a_progress)
  ,m_size(a_size)
  {}
  virtual ~progress(){}
protected:
  progress(const progress& a_from)
  :parent(a_from)
  ,m_ui(a_from.m_ui)
  ,m_progress(a_from.m_progress)
  ,m_size(a_from.m_size)
  {}
  progress& operator=(const progress& a_from){
    parent::operator=(a_from);
    m_size = a_from.m_size;
    return *this;
  }
protected:
  sg::ui& m_ui;
  sg::progress& m_progress;
  uint64 m_size;
};

}}

//inlib_build_use kernel

#endif

// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_sg_base_dumper
#define inlib_sg_base_dumper

#ifdef INLIB_MEM
#include "../mem"
#include "../S_STRING"
#endif

#include <string>
#include <vector>

namespace inlib {
namespace sg {
class gui_viewer;
}}

namespace inlib {
namespace sg {

class base_dumper {
#ifdef INLIB_MEM
  INLIB_SCLASS(inlib::sg::base_dumper)
#endif
public:
  virtual void get_infos(const std::string&,std::vector<std::string>&) const = 0;
  virtual base_dumper* copy() const = 0;
public:
  base_dumper(gui_viewer& a_gv):m_gv(a_gv){
#ifdef INLIB_MEM
    mem::increment(s_class().c_str());
#endif
  }
  virtual ~base_dumper(){
#ifdef INLIB_MEM
    mem::decrement(s_class().c_str());
#endif
  }
public:
  base_dumper(const base_dumper& a_from):m_gv(a_from.m_gv){
#ifdef INLIB_MEM
    mem::increment(s_class().c_str());
#endif
  }
  base_dumper& operator=(const base_dumper&) {return *this;}
protected:
  gui_viewer& m_gv;
};

}}

#endif

// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_colord
#define inlib_colord

#include "vec4d"

namespace inlib {

class colord : public vec4d {
  typedef vec4d parent;
public:
  colord():parent(0,0,0,1){}
#ifdef INLIB_MEM
  colord(double a_r,double a_g,double a_b,double a_a = 1,bool a_inc = true):parent(a_r,a_g,a_b,a_a,a_inc){}
#else
  colord(double a_r,double a_g,double a_b,double a_a = 1):parent(a_r,a_g,a_b,a_a){}
#endif
  virtual ~colord() {}
public:
  colord(const colord& a_from):parent(a_from){}
  colord& operator=(const colord& a_from){
    parent::operator=(a_from);
    return *this;
  }
public:
  double r() const {return v0();}
  double g() const {return v1();}
  double b() const {return v2();}
  double a() const {return v3();}

  void set_r(double a_v) {m_data[0] = a_v;}
  void set_g(double a_v) {m_data[1] = a_v;}
  void set_b(double a_v) {m_data[2] = a_v;}
  void set_a(double a_v) {m_data[3] = a_v;}
};

}

#endif

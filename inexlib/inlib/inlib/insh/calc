// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_insh_calc
#define inlib_insh_calc

#include "../yacc/calc"

#include "ishell"

namespace inlib {

inline void insh_calc(ishell& a_insh,const std::vector<std::string>& a_args) {
  if(a_args.empty()) {
    a_insh.warn("calc : at least one argument expected.");
    return;
  }
  const std::string formula = a_args[0];
  std::vector<std::string> vals = a_args;
  vals.erase(vals.begin());
  std::string value;
  if(!calc(a_insh.out(),formula,vals,value)) {
    a_insh.warn("calc : failed for "+sout(formula));
    return;
  }
  a_insh.out(value);
}

inline const std::string& insh_calc_help() {
  static const std::string s_help("\
calc: calc [formula] [variable values]\n\
  Expression evaluator.\n\
  Example:\n\
    calc 2+2\n\
    calc cos(x) 3.14\n\
    calc x/y 4 2\n\
");
  return s_help;
}

}

#endif

// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_insh_ishell_args_class_cmd
#define inlib_insh_ishell_args_class_cmd

#include "base_cmd"
#include "ishell"

namespace inlib {

template <class CLASS>
class ishell_args_class_cmd : public base_cmd {
  typedef base_cmd parent;
protected:
  typedef void(*exec_func)(ishell&,const std::vector<std::string>&,CLASS&);
  typedef void(*complete_func)(const std::string&,std::vector<std::string>&);
public:
  virtual base_cmd* copy() const {return new ishell_args_class_cmd<CLASS>(*this);}
  virtual void execute(const std::vector<std::string>& a_args) {m_exec(m_insh,a_args,m_class);}
  virtual const std::string& help() {return m_help_text;}
  virtual void complete_command(const std::string& a_begin,std::vector<std::string>& a_names) const {
    if(m_complete) {m_complete(a_begin,a_names);return;}
    a_names.clear();
  }
public:
  ishell_args_class_cmd(ishell& a_insh,CLASS& a_class,exec_func a_exec,const std::string& a_help_text)
  :m_insh(a_insh)
  ,m_class(a_class)
  ,m_exec(a_exec)
  ,m_help_text(a_help_text)
  ,m_complete(0)
  {}
  ishell_args_class_cmd(ishell& a_insh,CLASS& a_class,exec_func a_exec,const std::string& a_help_text,
                             complete_func a_complete)
  :m_insh(a_insh)
  ,m_class(a_class)
  ,m_exec(a_exec)
  ,m_help_text(a_help_text)
  ,m_complete(a_complete)
  {}
  virtual ~ishell_args_class_cmd() {}
public:
  ishell_args_class_cmd(const ishell_args_class_cmd& a_from)
  :parent(a_from)
  ,m_insh(a_from.m_insh)
  ,m_class(a_from.m_class)
  ,m_exec(a_from.m_exec)
  ,m_help_text(a_from.m_help_text)
  ,m_complete(a_from.m_complete)
  {}
  ishell_args_class_cmd& operator=(const ishell_args_class_cmd& a_from) {
    parent::operator=(a_from);
    m_exec = a_from.m_exec;
    m_help_text = a_from.m_help_text;
    m_complete = a_from.m_complete;
    return *this;
  }
protected:
  ishell& m_insh;
  CLASS& m_class;
  exec_func m_exec;
  std::string m_help_text;
  complete_func m_complete;
};

}

#define INLIB_INSH_ADD_ISHELL_ARGS_CLASS_CMD(a__insh,a__class,a__object,a__name,a__func,a__help)\
  a__insh.add_command(#a__name,new inlib::ishell_args_class_cmd<a__class>(a__insh,a__object,a__func,a__help));

#define INLIB_INSH_ADD_ISHELL_ARGS_CLASS_CMD_COMPLETE(a__insh,a__class,a__object,a__name,a__func,a__help,a__complete)\
  a__insh.add_command(#a__name,new inlib::ishell_args_class_cmd<a__class>(a__insh,a__object,a__func,a__help,a__complete));

#endif

/* Copyright (C) 2010, Guy Barrand. All rights reserved. */
/* See the file inlib.license for terms.                 */

//#include "gldef.h"

//#ifdef __cplusplus
//extern "C"{
//#endif

GLboolean gl2ps__glIsEnabled     (GLenum a){a=0;return GL_FALSE;}

/*
void      gl2ps__glPointSize     (GLfloat a){}
void      gl2ps__glClearColor    (GLclampf a,GLclampf b,GLclampf c,GLclampf d){}
void      gl2ps__glReadPixels    (GLint a,GLint b,GLsizei c,GLsizei d,GLenum e,GLenum f,GLvoid* g){}
void      gl2ps__glViewport      (GLint a,GLint b,GLsizei c,GLsizei d){}
void      gl2ps__glPixelStorei   (GLenum a,GLint b){}
void      gl2ps__glShadeModel    (GLenum a){}
void      gl2ps__glClear         (GLbitfield a){}
void      gl2ps__glFinish        (){}
void      gl2ps__glMatrixMode    (GLenum a){}
void      gl2ps__glLoadIdentity  (void){}
void      gl2ps__glLineWidth     (GLfloat a){}
void      gl2ps__glNormal3f      (GLfloat a,GLfloat b,GLfloat c){}
void      gl2ps__glEnable        (GLenum a){}
void      gl2ps__glDisable       (GLenum a){}
void      gl2ps__glLoadMatrixf   (const GLfloat* a){}
GLenum    gl2ps__glGetError      (){return GL_NO_ERROR;}
void      gl2ps__glFrontFace     (GLenum a){}
void      gl2ps__glColor4f       (GLfloat a,GLfloat b,GLfloat c,GLfloat d){}
void      gl2ps__glBlendFunc     (GLenum a,GLenum b){}
void      gl2ps__glVertexPointer (GLint a,GLenum b,GLsizei c,const GLvoid* d){}
void      gl2ps__glDrawArrays    (GLenum a,GLint b,GLsizei c){}
void      gl2ps__glEnableClientState  (GLenum a){}
void      gl2ps__glDisableClientState (GLenum a){}
void      gl2ps__glPolygonOffset (GLfloat a,GLfloat b){}
*/

/* for gl2ps : */
void      gl2ps__glBegin         (GLenum a){a=0;}
void      gl2ps__glEnd           (){}
void      gl2ps__glGetFloatv     (GLenum a,GLfloat* b){a=0;b=0;}
void      gl2ps__glVertex3f      (GLfloat a,GLfloat b,GLfloat c){a=b=c=0;}
void      gl2ps__glGetBooleanv   (GLenum a,GLboolean* b){a=0;b=0;}
void      gl2ps__glGetIntegerv   (GLenum a,GLint* b){a=0;b=0;}
GLint     gl2ps__glRenderMode    (GLenum a){a=0;return 0;}
void      gl2ps__glFeedbackBuffer(GLsizei a,GLenum b,GLfloat* c){a=0;b=0;c=0;}
void      gl2ps__glPassThrough   (GLfloat a){a=0;}

//#ifdef __cplusplus
//}
//#endif

